import { redisClient } from '../config/redis';
import { config } from '../config/constants';

/**
 * –ü–æ–º–µ—â–∞–µ—Ç –ø–∞—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∏–≥–Ω–æ—Ä –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É –Ω–∞ –≤—Ä–µ–º—è TTL.
 * –ö–ª—é—á –≤ Redis —Å—Ç—Ä–æ–∏—Ç—Å—è –∏–∑ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö anonClientId (—á—Ç–æ–±—ã (A,B) –∏ (B,A) –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏—Å—å).
 */
export async function ignoreUser(idA: string, idB: string): Promise<string> {
  const [id1, id2] = [idA, idB].sort();
  const key = `chat:ignore:${id1}:${id2}`;
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á —Å TTL (—Å–µ–∫—É–Ω–¥—ã –∏–∑ config.IGNORE_TTL_SECONDS)
  await redisClient.set(key, '1', 'EX', config.IGNORE_TTL_SECONDS);
  return key;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–∞—Ä–∞ anonClientId –≤ –∏–≥–Ω–æ—Ä–µ.
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∫–ª—é—á –∏–≥–Ω–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ Redis.
 */
export async function isIgnored(idA: string, idB: string): Promise<boolean> {
  const [id1, id2] = [idA, idB].sort();
  const key = `chat:ignore:${id1}:${id2}`;
  const exists = await redisClient.exists(key);
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥–Ω–æ—Ä–∞: ${id1} –∏ ${id2} -> exists=${exists}`);
  return exists === 1;
}
