// server/redisIgnore.js

import { config } from './config.js'

/**
 * –ü–æ–º–µ—â–∞–µ—Ç –ø–∞—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∏–≥–Ω–æ—Ä –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É –Ω–∞ –≤—Ä–µ–º—è TTL.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ anonClientId, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–π –¥–ª—è –ø–∞—Ä—ã.
 * 
 * @param {Redis} redis      - –∫–ª–∏–µ–Ω—Ç Redis
 * @param {string} idA       - anonClientId –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} idB       - anonClientId –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string}         - –∫–ª—é—á, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏–≥–Ω–æ—Ä –≤ Redis
 */
export async function ignoreUser(redis, idA, idB) {
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º ID, —á—Ç–æ–±—ã –∫–ª—é—á –±—ã–ª –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –¥–ª—è (A,B) –∏ (B,A)
  const [id1, id2] = [idA, idB].sort();
  const key = `chat:ignore:${id1}:${id2}`;
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á —Å TTL (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ config.IGNORE_TTL_SECONDS)
  await redis.set(key, "1", "EX", config.IGNORE_TTL_SECONDS);
  return key;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–µ–∂–∏–º–µ –∏–≥–Ω–æ—Ä–∞.
 * 
 * @param {Redis} redis      - –∫–ª–∏–µ–Ω—Ç Redis
 * @param {string} idA       - anonClientId –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} idB       - anonClientId –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {boolean}        - true (1), –µ—Å–ª–∏ –µ—Å—Ç—å –∏–≥–Ω–æ—Ä, –∏–Ω–∞—á–µ false (0)
 */
export async function isIgnored(redis, idA, idB) {
    const [id1, id2] = [idA, idB].sort();
    const key = `chat:ignore:${id1}:${id2}`;
    const exists = await redis.exists(key);
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥–Ω–æ—Ä–∞: ${id1} –∏ ${id2} ‚Üí exists=${exists}`);
    return exists;
  }