import { config } from './config.js'
import { v4 as uuidv4 } from 'uuid'

/**
 * –ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏.
 * 
 * 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –í–°–ï–ì–î–ê —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å (–ø–æ –ø–æ–ª—É –∏ –≤–æ–∑—Ä–∞—Å—Ç—É).
 * 2. –ü–µ—Ä–µ–±–∏—Ä–∞—é—Ç—Å—è –∫–∞–Ω–¥–∏–¥–∞—Ç—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏ ‚Äú–∫–æ–≥–æ –∏—â—É‚Äù (–ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞).
 * 3. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:
 *    - –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–∞–º –ª–∏ —è —Å–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ (anti self-join).
 *    - –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–Ω–ª–∞–π–Ω –ª–∏ –æ–Ω —Å–µ–π—á–∞—Å.
 *    - –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏ —è –µ–º—É –ø–æ–¥—Ö–æ–∂—É (–≤—Å—Ç—Ä–µ—á–Ω—ã–π –ø–æ–∏—Å–∫).
 *    - –ï—Å–ª–∏ –≤—Å—ë –æ–∫ ‚Äî —Å–æ–∑–¥–∞—ë–º –∫–æ–º–Ω–∞—Ç—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å, —Å–æ–µ–¥–∏–Ω—è–µ–º.
 *    - –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–æ—à—ë–ª ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –æ—á–µ—Ä–µ–¥—å.
 * 4. –ï—Å–ª–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ ‚Äî —Å—Ç–∞–≤–∏–º —Å–µ–±—è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å.
 */
export async function handleJoin(socket, io, redis, payload) {
  // 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (payload)
  const {
    ageGroup,        // –ú–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: '18-25')
    gender,          // –ú–æ–π –ø–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'm')
    seekingGender,   // –ö–æ–≥–æ –∏—â—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'f')
    seekingAgeGroup  // –ö–∞–∫–æ–π –≤–æ–∑—Ä–∞—Å—Ç –∏—â—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: '18-25')
  } = payload

  // 2. –ö–ª—é—á –º–æ–µ–π –æ—á–µ—Ä–µ–¥–∏ (–≥–¥–µ —Å—Ç–æ—é –Ø)
  // –ü—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ —è –º—É–∂—á–∏–Ω–∞ 18-25, —Ç–æ —ç—Ç–æ 'queue:m:18-25'
  const myKey = `queue:${gender}:${ageGroup}`

  // 3. –ö–ª—é—á –æ—á–µ—Ä–µ–¥–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ (—Ç–µ—Ö, –∫–æ–≥–æ —è –∏—â—É)
  // –ü—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ —è –∏—â—É –¥–µ–≤—É—à–∫—É 18-25 ‚Äî 'queue:f:18-25'
  const theirKey = `queue:${seekingGender}:${seekingAgeGroup}`

  let candidateRaw

  /**
   * 4. –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ (—Å—Ç–∞—Ä—ã—Ö), –∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ.
   *    ‚Äî –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ —Ü–µ–ª–µ–≤–æ–π –æ—á–µ—Ä–µ–¥–∏:
   */
  while ((candidateRaw = await redis.rpop(theirKey))) {
    const candidate = JSON.parse(candidateRaw)

    // [A] ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–∞–º –ª–∏ —è —Å–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    if (candidate.socketId === socket.id) {
      // –ï—Å–ª–∏ —Ç–∞–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏ –±–µ—Ä—ë–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
      continue
    }

    // [B] ‚ùå –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–Ω–ª–∞–π–Ω –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç (–Ω–µ –æ—Ç–≤–∞–ª–∏–ª—Å—è –ª–∏ —É –Ω–µ–≥–æ –±—Ä–∞—É–∑–µ—Ä/–∏–Ω—Ç–µ—Ä–Ω–µ—Ç)
    if (!io.sockets.sockets.has(candidate.socketId)) {
      // –ï—Å–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –æ—Ñ—Ñ–ª–∞–π–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏ –∏—â–µ–º –¥–∞–ª—å—à–µ
      console.log(`‚ùå –ö–∞–Ω–¥–∏–¥–∞—Ç ${candidate.socketId} –æ—Ñ—Ñ–ª–∞–π–Ω, –∏—â–µ–º –¥–∞–ª—å—à–µ...`)
      continue
    }

    // [C] ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º ‚Äú–≤—Å—Ç—Ä–µ—á–Ω–æ–µ‚Äù —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    //    –ö–∞–Ω–¥–∏–¥–∞—Ç –¥–æ–ª–∂–µ–Ω –∏—Å–∫–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–í–û–ï–ì–û –ø–æ–ª–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞!
    //    (—Ç–æ –µ—Å—Ç—å —É –Ω–µ–≥–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–æ–π –∂–µ –∑–∞–ø—Ä–æ—Å –∫–∞–∫ —É —Ç–µ–±—è, –Ω–æ –Ω–∞–æ–±–æ—Ä–æ—Ç)
    if (
      candidate.seekingGender === gender &&
      candidate.seekingAgeGroup === ageGroup
    ) {
      // –í—Å—ë —Å–æ–≤–ø–∞–ª–æ! –ú–æ–∂–Ω–æ —Å–æ–µ–¥–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –∫–æ–º–Ω–∞—Ç—ã
      const roomId = uuidv4()

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏ –≤ Redis (–¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏/–ª–æ–≥–æ–≤)
      await redis.hset(`session:${roomId}`, {
        userA: socket.id,
        userB: candidate.socketId,
        created: Date.now()
      })

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –û–¢–ö–†–´–¢–û–ô –∫–æ–º–Ω–∞—Ç—ã —É –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (matched)
      // TTL (–≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–ª—é—á–∞) –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã Redis —Å–∞–º —á–∏—Å—Ç–∏–ª –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
      await redis.set(
        `status:${socket.id}`,
        'matched',
        'EX',                           // "expire" ‚Äî –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ...
        config.REDIS_STATUS_TTL_SECONDS // ... —Å—Ç–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 120)
      )
      await redis.set(
        `status:${candidate.socketId}`,
        'matched',
        'EX',
        config.REDIS_STATUS_TTL_SECONDS
      )

      // –û–±–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è –∫ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ (roomId)
      socket.join(roomId) // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–æ–º–Ω–∞—Ç–µ
      socket.emit('joinRoom', { roomId }) // –°–æ–æ–±—â–∞–µ–º –µ–º—É –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã
      socket.to(candidate.socketId).emit('joinRoom', { roomId }) // –°–æ–æ–±—â–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç—É

      // –û–ø–æ–≤–µ—â–∞–µ–º –æ–±–æ–∏—Ö, —á—Ç–æ —á–∞—Ç –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å ("roomReady")
      socket.server.to(roomId).emit("roomReady")
      console.log(`üí¨ Room created: ${roomId} between ${socket.id} and ${candidate.socketId}`)
      return // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ
    } else {
      // [D] –ù–µ –ø–æ–¥–æ—à—ë–ª –≤—Å—Ç—Ä–µ—á–Ω—ã–π –∫—Ä–∏—Ç–µ—Ä–∏–π ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ –µ–≥–æ –æ—á–µ—Ä–µ–¥—å (–Ω–µ —Ç–µ—Ä—è–µ–º –µ–≥–æ!)
      await redis.lpush(theirKey, candidateRaw)
    }
  }

  // 5. –ï—Å–ª–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ (–∏–ª–∏ –≤—Å–µ –±—ã–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã/–æ—Ñ—Ñ–ª–∞–π–Ω/–Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–µ) ‚Äî –∫–ª–∞–¥—ë–º —Å–µ–±—è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å
  const entry = JSON.stringify({
    socketId: socket.id,
    ageGroup,
    gender,
    seekingGender,
    seekingAgeGroup,
    joined: Date.now()
  })

  await redis.lpush(myKey, entry) // –°—Ç–∞–≤–∏–º —Å–µ–±—è –≤ –Ω–∞—á–∞–ª–æ —Å–≤–æ–µ–π –æ—á–µ—Ä–µ–¥–∏
  await redis.set(
    `status:${socket.id}`,
    'waiting',                       // —Å—Ç–∞—Ç—É—Å: –∏—â–µ—Ç!
    'EX',
    config.REDIS_STATUS_TTL_SECONDS
  )
  console.log(`üïì ${socket.id} added to queue ${myKey}`)
}